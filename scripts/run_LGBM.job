#!/bin/bash

#SBATCH --job-name=lgbm-single
#SBATCH --partition=rome
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=64G
#SBATCH --time=00:30:00
#SBATCH --output=output/lgbm/slurm_output_%A.out
#SBATCH --error=output/lgbm/slurm_error_%A.err

# Define a unique output directory for this specific job run
# SLURM_JOB_ID is unique for each job submission
export OUTPUT_DIR=output/lgbm/lgbm_single_${SLURM_JOB_ID}
mkdir -p $OUTPUT_DIR

# Load modules
module purge
module load 2023
module load Python/3.11.3-GCCcore-12.3.0
module load Python-bundle-PyPI/2023.06-GCCcore-12.3.0
module load matplotlib/3.7.2-gfbf-2023a
module load scikit-learn/1.3.1-gfbf-2023a

# Move into your project directory (safety)
cd $HOME/eSTGNN

# Create directories on scratch space
mkdir -p $TMPDIR/data/processed


##### Dynamically copying the required file to scratch #####
echo "Determining required data file..."
# NOTE: This logic remains the same, as it depends on the command-line arguments passed to the job
REQUIRED_FILE=$(srun python -m src.utils.filename_util \
    --model_family tabular \
    --model LightGBM \
    "$@")

# Checking if it returned a filename
if [ -z "$REQUIRED_FILE" ]; then
    echo "ERROR: Helper script could not determine a filename from the arguments."
    exit 1
fi

# Define the full source and destination paths
SOURCE_PATH="$HOME/eSTGNN/data/processed/$REQUIRED_FILE"
DEST_PATH="$TMPDIR/data/processed/$REQUIRED_FILE"

# Checking if the required file actually exists before trying to copy
if [ ! -f "$SOURCE_PATH" ]; then
    echo "ERROR: Required data file not found at: $SOURCE_PATH"
    exit 1
fi

# Copying the required file to scratch
echo "Copying required file '$REQUIRED_FILE' to scratch space..."
cp "$SOURCE_PATH" "$DEST_PATH"

# Final check
if [ ! -f "$DEST_PATH" ]; then
    echo "ERROR: Failed to copy '$REQUIRED_FILE' to scratch space."
    exit 1
fi
##### Dynamically copying the required file to scratch #####

# Set thread counts for libraries
export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK
export NUMEXPR_NUM_THREADS=$SLURM_CPUS_PER_TASK

# Set directories
export DATA_DIR=$TMPDIR/data

echo "Job ID: ${SLURM_JOB_ID}"
echo "Starting single run with data from $DATA_DIR"
echo "Results for this run will be saved to $OUTPUT_DIR"

# Run the SINGLE RUN script, passing the unique output directory and a fixed experiment_id
# Assumes the new script is located at src/models/LightGBM/single_run.py
srun python -m src.models.LightGBM.single_run \
  --data_dir $DATA_DIR \
  --output_dir $OUTPUT_DIR \
  --experiment_id 0 \
  --model_family tabular \
  --model LightGBM \
  "$@"

echo "Cleaning up scratch space..."
rm -rf $TMPDIR/data

echo "Job ${SLURM_JOB_ID} completed successfully!"