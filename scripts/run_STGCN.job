#!/bin/bash

#SBATCH --job-name=stgcn-single
#SBATCH --partition=gpu_h100
#SBATCH --gpus=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=4
#SBATCH --mem=32G
#SBATCH --time=01:00:00
#SBATCH --output=logs/experiments/slurm_output_%A.out
#SBATCH --error=logs/experiments/slurm_error_%A.err


# --- 1. DEFINE PERSISTENT STORAGE DIRECTORIES ---
PERSISTENT_PROJECT_DIR=$HOME/eSTGNN
PERSISTENT_DATA_DIR=$PERSISTENT_PROJECT_DIR/data
PERSISTENT_PROCESSED_DATA_DIR=$PERSISTENT_DATA_DIR/processed
PERSISTENT_OUTPUT_DIR=$PERSISTENT_PROJECT_DIR/output/experiments
PERSISTENT_LOG_DIR=$PERSISTENT_PROJECT_DIR/logs/experiments

# A unique output directory on persistent storage for this specific run's final results
PERSISTENT_RUN_OUTPUT_DIR=$PERSISTENT_OUTPUT_DIR/stgcn_single_run_${SLURM_JOB_ID}


# --- 2. DEFINE SCRATCH SPACE DIRECTORIES ---
SCRATCH_PROJECT_DIR=$TMPDIR/eSTGNN
SCRATCH_DATA_DIR=$SCRATCH_PROJECT_DIR/data
SCRATCH_PROCESSED_DATA_DIR=$SCRATCH_DATA_DIR/processed

# The training script will write its output here on the fast scratch disk
SCRATCH_RUN_OUTPUT_DIR=$SCRATCH_PROJECT_DIR/output/stgcn_single_run_${SLURM_JOB_ID}


# --- 3. ENSURE ALL NECESSARY DIRECTORIES EXIST ---
echo "Creating directories..."
# Create persistent directories for final results and logs
mkdir -p $PERSISTENT_RUN_OUTPUT_DIR
mkdir -p $PERSISTENT_LOG_DIR

# Create scratch directories for the job to run in
mkdir -p $SCRATCH_PROCESSED_DATA_DIR
mkdir -p $SCRATCH_RUN_OUTPUT_DIR


# --- 4. LOAD MODULES ---
echo "Loading required modules..."
module purge
module load 2023
module load Python/3.11.3-GCCcore-12.3.0
module load CUDA/12.1.1
module load cuDNN/8.9.2.26-CUDA-12.1.1
module load PyTorch/2.1.2-foss-2023a-CUDA-12.1.1
module load Python-bundle-PyPI/2023.06-GCCcore-12.3.0
module load matplotlib/3.7.2-gfbf-2023a
module load scikit-learn/1.3.1-gfbf-2023a


# --- 5. PREPARE DATA ON SCRATCH ---
echo "Copying input data from persistent storage to scratch space..."
rsync -a --info=progress2 "$PERSISTENT_PROCESSED_DATA_DIR/" "$SCRATCH_PROCESSED_DATA_DIR"

# Check if data copy succeeded
if [ ! -d "$SCRATCH_PROCESSED_DATA_DIR" ] || [ -z "$(ls -A "$SCRATCH_PROCESSED_DATA_DIR")" ]; then
    echo "ERROR: Data directory not copied to scratch space correctly"
    exit 1
fi
echo "Data copy complete."

# Set environment variables for performance
export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:128
export NCCL_DEBUG=INFO
echo "Setting NUMEXPR_NUM_THREADS to $SLURM_CPUS_PER_TASK"
export NUMEXPR_NUM_THREADS=$SLURM_CPUS_PER_TASK


# --- 6. RUN THE PYTHON SCRIPT ---
echo "Starting Python script..."
echo "Project running from: $PERSISTENT_PROJECT_DIR"
echo "Input data is read from: $SCRATCH_DATA_DIR"
echo "Output will be written to: $SCRATCH_RUN_OUTPUT_DIR"

cd $PERSISTENT_PROJECT_DIR

srun python -m src.models.STGCN4B.homogeneous.single_run \
    --data_dir $SCRATCH_DATA_DIR \
    --output_dir $SCRATCH_RUN_OUTPUT_DIR \
    --processed_data_dir $SCRATCH_PROCESSED_DATA_DIR \
    --enable_cuda \
    "$@"


# --- 7. COPY RESULTS BACK TO PERSISTENT STORAGE ---
echo "Copying results from scratch back to persistent storage..."
rsync -a "$SCRATCH_RUN_OUTPUT_DIR/" "$PERSISTENT_RUN_OUTPUT_DIR/"
echo "Results successfully copied to $PERSISTENT_RUN_OUTPUT_DIR"


# --- 8. CLEAN UP SCRATCH SPACE ---
echo "Cleaning up scratch space..."
rm -rf $TMPDIR/*

echo "Job completed successfully!"